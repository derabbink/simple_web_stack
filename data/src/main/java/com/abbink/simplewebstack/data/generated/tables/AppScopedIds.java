/**
 * This class is generated by jOOQ
 */
package com.abbink.simplewebstack.data.generated.tables;


import com.abbink.simplewebstack.data.generated.Keys;
import com.abbink.simplewebstack.data.generated.Public;
import com.abbink.simplewebstack.data.generated.tables.records.AppScopedIdsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppScopedIds extends TableImpl<AppScopedIdsRecord> {

    private static final long serialVersionUID = 975398479;

    /**
     * The reference instance of <code>PUBLIC.APP_SCOPED_IDS</code>
     */
    public static final AppScopedIds APP_SCOPED_IDS = new AppScopedIds();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppScopedIdsRecord> getRecordType() {
        return AppScopedIdsRecord.class;
    }

    /**
     * The column <code>PUBLIC.APP_SCOPED_IDS.USER_ID</code>.
     */
    public final TableField<AppScopedIdsRecord, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.APP_SCOPED_IDS.APP_SCOPED_USER_XID</code>.
     */
    public final TableField<AppScopedIdsRecord, String> APP_SCOPED_USER_XID = createField("APP_SCOPED_USER_XID", org.jooq.impl.SQLDataType.CHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.APP_SCOPED_IDS.APP_ID</code>.
     */
    public final TableField<AppScopedIdsRecord, Integer> APP_ID = createField("APP_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.APP_SCOPED_IDS</code> table reference
     */
    public AppScopedIds() {
        this("APP_SCOPED_IDS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.APP_SCOPED_IDS</code> table reference
     */
    public AppScopedIds(String alias) {
        this(alias, APP_SCOPED_IDS);
    }

    private AppScopedIds(String alias, Table<AppScopedIdsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AppScopedIds(String alias, Table<AppScopedIdsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AppScopedIdsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_9;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AppScopedIdsRecord>> getKeys() {
        return Arrays.<UniqueKey<AppScopedIdsRecord>>asList(Keys.CONSTRAINT_9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppScopedIds as(String alias) {
        return new AppScopedIds(alias, this);
    }

    /**
     * Rename this table
     */
    public AppScopedIds rename(String name) {
        return new AppScopedIds(name, null);
    }
}
