/**
 * This class is generated by jOOQ
 */
package com.abbink.simplewebstack.common.data.generated.tables.records;


import com.abbink.simplewebstack.common.data.generated.tables.AccessTokens;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccessTokensRecord extends UpdatableRecordImpl<AccessTokensRecord> implements Record7<Integer, Integer, Integer, String, String, String, Timestamp> {

	private static final long serialVersionUID = -814463;

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKENS.ID</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKENS.ID</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKENS.USER_ID</code>.
	 */
	public void setUserId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKENS.USER_ID</code>.
	 */
	public Integer getUserId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKENS.APP_ID</code>.
	 */
	public void setAppId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKENS.APP_ID</code>.
	 */
	public Integer getAppId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKENS.TOKEN_SCOPED_USER_XID</code>.
	 */
	public void setTokenScopedUserXid(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKENS.TOKEN_SCOPED_USER_XID</code>.
	 */
	public String getTokenScopedUserXid() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKENS.SALT</code>.
	 */
	public void setSalt(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKENS.SALT</code>.
	 */
	public String getSalt() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKENS.TOKEN</code>.
	 */
	public void setToken(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKENS.TOKEN</code>.
	 */
	public String getToken() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKENS.EXPIRES_AT</code>.
	 */
	public void setExpiresAt(Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKENS.EXPIRES_AT</code>.
	 */
	public Timestamp getExpiresAt() {
		return (Timestamp) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, Integer, Integer, String, String, String, Timestamp> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, Integer, Integer, String, String, String, Timestamp> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return AccessTokens.ACCESS_TOKENS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return AccessTokens.ACCESS_TOKENS.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return AccessTokens.ACCESS_TOKENS.APP_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return AccessTokens.ACCESS_TOKENS.TOKEN_SCOPED_USER_XID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return AccessTokens.ACCESS_TOKENS.SALT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return AccessTokens.ACCESS_TOKENS.TOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return AccessTokens.ACCESS_TOKENS.EXPIRES_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getAppId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getTokenScopedUserXid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getSalt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getToken();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getExpiresAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord value2(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord value3(Integer value) {
		setAppId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord value4(String value) {
		setTokenScopedUserXid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord value5(String value) {
		setSalt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord value6(String value) {
		setToken(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord value7(Timestamp value) {
		setExpiresAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokensRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, String value6, Timestamp value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AccessTokensRecord
	 */
	public AccessTokensRecord() {
		super(AccessTokens.ACCESS_TOKENS);
	}

	/**
	 * Create a detached, initialised AccessTokensRecord
	 */
	public AccessTokensRecord(Integer id, Integer userId, Integer appId, String tokenScopedUserXid, String salt, String token, Timestamp expiresAt) {
		super(AccessTokens.ACCESS_TOKENS);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, appId);
		setValue(3, tokenScopedUserXid);
		setValue(4, salt);
		setValue(5, token);
		setValue(6, expiresAt);
	}
}
