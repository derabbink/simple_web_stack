/**
 * This class is generated by jOOQ
 */
package com.abbink.simplewebstack.common.data.generated.tables;


import com.abbink.simplewebstack.common.data.generated.Keys;
import com.abbink.simplewebstack.common.data.generated.Public;
import com.abbink.simplewebstack.common.data.generated.tables.records.SessionsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sessions extends TableImpl<SessionsRecord> {

	private static final long serialVersionUID = 1022492886;

	/**
	 * The reference instance of <code>PUBLIC.SESSIONS</code>
	 */
	public static final Sessions SESSIONS = new Sessions();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SessionsRecord> getRecordType() {
		return SessionsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.SESSIONS.ID</code>.
	 */
	public final TableField<SessionsRecord, String> ID = createField("ID", org.jooq.impl.SQLDataType.CHAR.length(88).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.SESSIONS.CREDENTIALS</code>.
	 */
	public final TableField<SessionsRecord, String> CREDENTIALS = createField("CREDENTIALS", org.jooq.impl.SQLDataType.CHAR.length(88).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.SESSIONS.SALT</code>.
	 */
	public final TableField<SessionsRecord, String> SALT = createField("SALT", org.jooq.impl.SQLDataType.CHAR.length(24).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.SESSIONS.EXPIRES_AT</code>.
	 */
	public final TableField<SessionsRecord, Timestamp> EXPIRES_AT = createField("EXPIRES_AT", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>PUBLIC.SESSIONS</code> table reference
	 */
	public Sessions() {
		this("SESSIONS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.SESSIONS</code> table reference
	 */
	public Sessions(String alias) {
		this(alias, SESSIONS);
	}

	private Sessions(String alias, Table<SessionsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Sessions(String alias, Table<SessionsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SessionsRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_8;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SessionsRecord>> getKeys() {
		return Arrays.<UniqueKey<SessionsRecord>>asList(Keys.CONSTRAINT_8);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Sessions as(String alias) {
		return new Sessions(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Sessions rename(String name) {
		return new Sessions(name, null);
	}
}
