/**
 * This class is generated by jOOQ
 */
package com.abbink.simplewebstack.common.data.generated.tables;


import com.abbink.simplewebstack.common.data.generated.Keys;
import com.abbink.simplewebstack.common.data.generated.Public;
import com.abbink.simplewebstack.common.data.generated.tables.records.ExternalIdsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExternalIds extends TableImpl<ExternalIdsRecord> {

	private static final long serialVersionUID = 321482731;

	/**
	 * The reference instance of <code>PUBLIC.EXTERNAL_IDS</code>
	 */
	public static final ExternalIds EXTERNAL_IDS = new ExternalIds();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExternalIdsRecord> getRecordType() {
		return ExternalIdsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.EXTERNAL_IDS.XID</code>.
	 */
	public final TableField<ExternalIdsRecord, String> XID = createField("XID", org.jooq.impl.SQLDataType.CHAR.length(10).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.EXTERNAL_IDS.TYPE</code>.
	 */
	public final TableField<ExternalIdsRecord, String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * Create a <code>PUBLIC.EXTERNAL_IDS</code> table reference
	 */
	public ExternalIds() {
		this("EXTERNAL_IDS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.EXTERNAL_IDS</code> table reference
	 */
	public ExternalIds(String alias) {
		this(alias, EXTERNAL_IDS);
	}

	private ExternalIds(String alias, Table<ExternalIdsRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExternalIds(String alias, Table<ExternalIdsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ExternalIdsRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_3;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ExternalIdsRecord>> getKeys() {
		return Arrays.<UniqueKey<ExternalIdsRecord>>asList(Keys.CONSTRAINT_3);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExternalIds as(String alias) {
		return new ExternalIds(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExternalIds rename(String name) {
		return new ExternalIds(name, null);
	}
}
